{
	"": {
		"prefix": "gleet",
		"body": [
		  "#include <bits/stdc++.h>",
		  "using namespace std;",
		  "",
		  "#define fori(i, n) for (int i = 0; i < n; i++)",
		  "#define ll long long",
		  "#define all(x) x.begin(), x.end()",
		  "#define sortall(x) sort(all(x))",
		  "typedef pair<int, int>	pii;",
		  "typedef vector<int>		vi;",
		  "typedef vector<pii>		vpii;",
		  "typedef vector<vi>		vvi;",
		  "//=======================",
		  "",
		  "class Graph {",
		  "public:",
		  "",
		  "    vector<vector<int>> adj;",
		  "    vector<bool> vis;",
		  "",
		  "    Graph(int V, int E) : adj(V), vis(V, false) {",
		  "",
		  "        while (E--) {",
		  "            int u, v;",
		  "            cin >> u >> v;",
		  "            u--, v--;",
		  "            adj[u].push_back(v);",
		  "            adj[v].push_back(u);",
		  "        }   ",
		  "    }",
		  "",
		  "    void dfs(int s) {",
		  "        vis[s] = true;",
		  "        for (auto v : adj[s]) {",
		  "            if (vis[v]) continue;",
		  "            dfs(v);",
		  "            //code here",
		  "        }",
		  "    }",
		  "};",
		  "",
		  "class Solution {",
		  "public:",
		  "    int solve() {",
		  "",
		  "    }",
		  "};",
		  "",
		  "int main() {",
		  "    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);",
		  "    freopen(\"../input.txt\", \"r\", stdin);",
		  "    freopen(\"../output.txt\", \"w\", stdout);",
		  "",
		  "    int V, E;",
		  "    cin >> V >> E;",
		  "    Graph G(V, E);",
		  "    Solution obj;",
		  "    cout << obj.solve();",
		  "}",
		  ""
		],
		"description": ""
	  }
}